# This is the main configuration file for the FIX-Gateway Server

# For use in this configuration, {CONFIG} will be replaced with the
# directory where this file is found.

# File that defines the database.
# No need to change this, if you need to add some custom keys do 
# that inside the file database/custom.yaml
database file: "{CONFIG}/database.yaml"

# Set to false if you do not want to auto-start
auto start: true

# Set initial values after the database is initialized.
# If there are duplicate assignments in these files, the last
# file listed will overwrite data in previous files
# Plugins may overwrite this data as well.
initialization files:
   - "{CONFIG}/init_data/default.ini"
  # - "{CONFIG}/init_data/airplanes/cessna/c170b.ini"
  # - "{CONFIG}/init_data/flight_gear/cessna_172.ini"
  # - "{CONFIG}/init_data/engines/aeromomentum/am13.ini"
  #- "{CONFIG}/init_data/engines/rotax/582.ini"
# Make your edits in this file:
   - "{CONFIG}/init_data/custom.ini"
# If you create a file for your engine, airplane or equipment
# and want to share it please make a pull request on github.
# Other users with the same engine will appreciate that

# Connections:
# if 'load' is 'yes' the connection plugin will be loaded at program start
# if 'module' should be set to the location of the Python module that
# represents the connection plugin.
# All other configuration options will be passed to the connection plugin
# itself. See the FIX-Gateway documentation for specific connection plugin
# configuration options.
connections:
  include:
  - connections/quorum_left.yaml
  - connections/data_recorder.yaml
  - connections/netfix.yaml
  #- connections/command.yaml
  #- connections/flight_gear_simulator.yaml
  #- connections/xplane.yaml
  - connections/canfix_left.yaml
  #- connections/gui.yaml
  - connections/system.yaml
  - connections/annunciate.yaml
  #- connections/test.yaml
  #- connections/rpi_bno055.yaml
  #- connections/rpi_bmp085.yaml
  #- connections/rpi_virtualwire.yaml
  #- connections/baro_rpi_rotary_encoder.yaml
  #- connections/mcp3008.yaml
  #- connections/rpi_buttons.yaml
  #- connections/rais.yaml
  - connections/compute.yaml
  #- connections/dimmer.yaml
  #- connections/grand_rapids_eis.yaml
  - connections/stratux.yaml
  - connections/mavlink.yaml
  - connections/ifly.yaml
  - connections/megasquirt.yaml
  - connections/mgl.yaml
  #- connections/demo.yaml 

# Logging configuration - See Python logging.config module documenation
# This is logging for system messages, not system data
# If you want a Flight Data Recorder, see the file connections/data_recorder.yaml
logging:
  version: 1
  disable_existing_loggers: False
  loggers:
    '':
      # messages with levels below the one given will not be logged
      #level: DEBUG
      #level: INFO
      level: WARNING
      #level: ERROR
      #level: CRITICAL

      handlers: [stderr, syslog]
      propagate: True

  formatters:
    standard:
      format: "%(levelname)s:%(asctime)s:%(name)s - %(message)s"
      datefmt: "%Y%m%d-%H:%M:%S"
      class: logging.Formatter

  handlers:
    stderr:
      class: logging.StreamHandler
      formatter: standard
      stream: ext://sys.stderr

#    file:
#      class: logging.FileHandler
#      formatter: standard
#      filename: fixgw.log
#      mode: w
#      #mode: a

    syslog:
      class: logging.handlers.SysLogHandler
      address: /dev/log
      facility: local6
      formatter: standard
