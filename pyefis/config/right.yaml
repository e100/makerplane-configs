auto start: True

main:
  # IP information for network adapter
  FixServer: 127.0.0.1
  FixPort: 3490
  # Screen Geometry
  #screenWidth: 1280
  #screenHeight: 720
  #screenWidth: 1024
  #screenHeight: 768
  screenWidth: 1920
  #screenHeight: 540
  #screenHeight: 550
  screenHeight: 1080
  #screenWidth: 640
  #screenHeight: 480
  #screenWidth: 3840
  #screenHeight: 1100
  # Set EFIS to occupy the entire screen without system border / menu
  screenFullSize: True

  # Screen background color RGB
  screenColor: (0,0,0)

  # If left out the first defined screen will be default
  defaultScreen: PFD

  # nodeID, currently only used in touchscreen buttons
  # the value will replace {id} in the button's dbkey
  nodeID: 2

# The keybindings are used to attach keystrokes to actions.  The key can be
# a string that represents a key Sequence.  See the documentation for more
# information about key sequences and actions.
keybindings:
  - key: X
    action: exit

  - key: A
    action: Show Previous Screen

  - key: S
    action: Show Next Screen

  - key: P
    action: Show Screen
    args: PFD

  - key: M
    action: Set Airspeed Mode

  - key: "1"
    action: Set EGT Mode
    args: Normalize
  - key: "2"
    action: Set EGT Mode
    args: Peak
  - key: "3"
    action: Set EGT Mode
    args: Lean
  - key: "4"
    action: Set EGT Mode
    args: Reset Peak

# Data bindings tie actions to values in teh database
# key is the database key and should match the FIX Gateway key
#databindings:


# This section defines FIX IDs that we'll write out to the
# FIX Gateway server.  Each can be defined as one of three
# methods.  Interval will look at the time out lifetime (TOL)
# of the point and send the data at half that interval.
# OnChange will send when the value is changed and Both will
# do both.
#outputs:
#  BARO: onchange
#  TRIMP: onchange
#  TRIMR: onchange
#  TRIMY: onchange
#  APREQ: onchange
#  BTNHH: onchange
#  APADJ: onchange
#  BTNFP: onchange

# Screen definitions describe the screens that will be loaded
# and ready for use.  Each section should start with "Screen."
# followed by the name.  The only required configuration is
# module, which is the module that will be loaded to render
# the screen

screens:
  ANDROID:
    dbpath: ~/makerplane/pyefis/CIFP/FAACIFP18
    indexpath: ~/makerplane/pyefis/CIFP/index.bin
    module: pyefis.screens.screenbuilder
    title: Screen Builder
    encoder: ENC2
    encoder_button: BTN2
    layout:
      type: grid #Splits the screen into evenly sized grids where each grid can contain a single insturment
      #draw_grid: true
      rows: 110
      columns: 200
      display_state:
        interval: 3000
        states: 2
    instruments:
      - type: include,includes/side-buttons.yaml
        relative: true
        row: 0
        column: 0
      - type: include,includes/basic_arcs.yaml
        relative: true
        row: 0
        column: 14
      - type: weston
        #disabled: true
        row: 0
        column: 45
        span:
          rows: 113
          columns: 155
        options:
          socket: pyefis-waydroid-1
          ini: weston.ini
          command: waydroid
          args:
            - show-full-ui
      - type: include,includes/fuel_gauges.yaml
        relative: true
        row: 70
        column: 0
        display_state: 1
      - type: include,includes/mgl/v16/active-display.yaml
        #relative: true
        row: 70
        column: 0
        span:
          rows: 40
          columns: 45
        display_state: 2
        replace:
          radio_id: 1
 
  PFD:
    dbpath: ~/makerplane/pyefis/CIFP/FAACIFP18
    indexpath: ~/makerplane/pyefis/CIFP/index.bin
      #refresh_period: 0.25
    module: pyefis.screens.screenbuilder
    title: Screen Builder
    encoder: ENC2
    encoder_button: BTN2
    layout:
      type: grid #Splits the screen into evenly sized grids where each grid can contain a single insturment
      #draw_grid: true
      rows: 110
      columns: 200
      columns: 200
      display_state:
        interval: 3000
        states: 2
    instruments:
      - type: include,includes/side-buttons.yaml
        relative: true
        row: 0
        column: 0

      - type: include,includes/virtual_vfr.yaml
        relative: true
        row: 0
        column: 45

      - type: include,includes/basic_arcs.yaml
        relative: true
        row: 0
        column: 14
      - type: include,includes/fuel_gauges.yaml
        relative: true
        row: 70
        column: 0
        display_state: 1
      - type: include,includes/mgl/v16/active-display.yaml
        #relative: true
        row: 70
        column: 0
        span:
          rows: 40
          columns: 45
        display_state: 2
        replace:
          radio_id: 1

  RADIO:
    dbpath: ~/makerplane/pyefis/CIFP/FAACIFP18
    indexpath: ~/makerplane/pyefis/CIFP/index.bin
    module: pyefis.screens.screenbuilder
    title: Radio screen
    encoder: ENC2
    encoder_button: BTN2
    layout:
      type: grid #Splits the screen into evenly sized grids where each grid can contain a single insturment
      rows: 110
      columns: 200
      #draw_grid: true
    instruments:
      - type: include,includes/virtual_vfr.yaml
        relative: true
        row: 0
        column: 75
        span:
          rows: 70
          columns: 125
      - type: include,includes/side-buttons.yaml
        relative: true
        row: 0
        column: 0
      - type: include,includes/basic_arcs.yaml
        relative: true
        row: 0
        column: 14
      - type: include,includes/power_temp_arcs.yaml
        relative: true
        row: 0
        column: 45
      - type: include,includes/fuel_gauges.yaml
        relative: true
        row: 70
        column: 0
      - type: include,includes/mgl/v16/radio-display.yaml
        replace:
          radio_id: 1 # {radio_id} is replaced anywhere it appears in the included config
                      # Maybe you have two radios COMACTTX{radio_id} -> COMACTTX1
        relative: true
        row: 70
        column: 45

          
  EMS:
    dbpath: ~/makerplane/pyefis/CIFP/FAACIFP18
    indexpath: ~/makerplane/pyefis/CIFP/index.bin
    module: pyefis.screens.screenbuilder
    title: Engine Management New
    encoder: ENC2
    encoder_button: BTN2
    layout:
      type: grid #Splits the screen into evenly sized grids where each grid can contain a single insturment
      rows: 110
      columns: 200
      #draw_grid: true
      columns: 200
      display_state:
        interval: 3000
        states: 2
    instruments:
      - type: include,includes/virtual_vfr.yaml
        relative: true
        row: 0
        column: 75
        span:
          rows: 70
          columns: 125
      - type: include,includes/side-buttons.yaml
        relative: true
        row: 0
        column: 0
      - type: include,includes/basic_arcs.yaml
        relative: true
        row: 0
        column: 14
      - type: include,includes/power_temp_arcs.yaml
        relative: true
        row: 0
        column: 45
      - type: include,includes/fuel_gauges.yaml
        relative: true
        row: 70
        column: 0
        display_state: 1
      - type: include,includes/mgl/v16/active-display.yaml
        #relative: true
        row: 70
        column: 0
        span:
          rows: 40
          columns: 45
        display_state: 2
        replace:
          radio_id: 1
      - type: include,includes/cht_bars.yaml
        relative: true
        row: 70
        column: 80
      - type: include,includes/egt_bars.yaml
        relative: true
        row: 70
        column: 47
      - type: ganged_button
        #disabled: true
        gang_type: vertical
        row: 74
        column: 111
        #move:
        #  shrink: 25
        #  justify: top
        span:
          rows: 30
          columns: 10
        groups:
          - name: Buttons
            gap: 12
            instruments:
              -
                options:
                  config: buttons/egt-Normalize.yaml
              -
                options:
                  config: buttons/egt-Lean.yaml
              -
                options:
                  config: buttons/egt-Peak.yaml
              -
                options:
                  config: buttons/egt-reset-peak.yaml

      -
        type: include,includes/megasquirt_bars.yaml
        row: 71.5
        column: 120
        span:
          rows: 34
          columns: 80



# Hooks are user defined modules that are loaded at specific points
# in the programs execution.  Right now their is only one place and
# it is right after all of the initialization and just before the
# main window and default screen are shown.  We'll add more as the
# need arises.
hooks:
  # Keys:
  #   module: user.hooks.keys
  # Composite:
  #   module: user.hooks.composite


# Logging configuration - See Python logging.config module documenation
# Logging configuration - See Python logging.config module documenation
logging:
  version: 1
  disable_existing_loggers: False
  loggers:
    '':
      # messages with levels below the one given will not be logged
      #level: DEBUG
      level: INFO
      #level: WARNING
      #level: ERROR
      #level: CRITICAL

      handlers: [stderr ] #, file]
      propagate: True

  formatters:
    standard:
      format: "%(levelname)s:%(asctime)s:%(name)s - %(message)s"
      datefmt: "%Y%m%d-%H:%M:%S"
      class: logging.Formatter

  handlers:
    stderr:
      class: logging.StreamHandler
      formatter: standard
      stream: ext://sys.stderr

#    file:
#      class: logging.FileHandler
#      formatter: standard
#      filename: fixgw.log
#      mode: w
      #mode: a

    syslog:
      class: logging.handlers.SysLogHandler
      formatter: standard
